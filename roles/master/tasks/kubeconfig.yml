- name: generate "{{ rolename }}" kubeconfig
  shell: "{{ item }}"
  loop:
    - kubectl config set-cluster kubernetes --certificate-authority=/opt/k8s/cert/ca.pem --embed-certs=true --server="https://{{ nodeip }}:6443" --kubeconfig="{{ rolename }}.kubeconfig" 
    - kubectl config set-credentials "{{ cn }}" --client-certificate=/opt/k8s/cert/"{{ rolename }}.pem" --client-key=/opt/k8s/cert/"{{ rolename }}-key.pem" --embed-certs=true --kubeconfig="{{ rolename }}.kubeconfig"  
    - kubectl config set-context "{{ cn }}" --cluster=kubernetes --user="{{ cn }}" --kubeconfig="{{ rolename }}.kubeconfig"  
    - kubectl config use-context "{{ cn }}" --kubeconfig="{{ rolename }}.kubeconfig"
    - touch  has-{{ rolename }}
  args:
    chdir: /opt/k8s/cfg/
    creates: /opt/k8s/cfg/has-{{ rolename }}
