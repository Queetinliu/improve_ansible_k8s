- include_tasks: setuphttpserver.yml

- name: make addons direcroty
  file:
    path: "{{ k8s_dir }}/addons"
    state: directory
  delegate_to: "{{ item }}" 
  with_items: "{{ groups['workers'] }}"
#部署registry组件
- block:
  - name: copy registry yaml
    copy:
      src: files/registry.yaml
      dest: "{{ k8s_dir }}/addons/registry.yaml"

  - name: copy registry tar
    get_url:
    #copy:
      url: "{{ httpurl }}/{{ ansible_role_name }}/registry.tar"
      dest: "{{ k8s_dir }}/addons/registry.tar"
    delegate_to: "{{ item }}" 
    with_items: "{{ groups['workers'] }}"
   
  - name: load registry tar
    shell: docker load -i "{{ k8s_dir }}/addons/registry.tar"
    delegate_to: "{{ item }}" 
    with_items: "{{ groups['workers'] }}"
  
  - name: deploy registry pod
    shell: kubectl apply -f "{{ k8s_dir }}/addons/registry.yaml"
    register: registry

  - name: get clusterip of registry
    shell: kubectl get svc | grep docker-registry |awk '{print $3}'
    changed_when: false
    register: registry

  - name: update hosts resolv
    lineinfile:
      path: /etc/hosts
      regexp: 'k8shub.com$'
      line: "{{ registry.stdout}} k8shub.com"
      state: present
    delegate_to: "{{ item }}"
    with_items: "{{ groups['workers'] }}"

  when: groups['workers'] | length >= 2

- name: install jq
  yum:
    name: jq
    state: present
  async: 120
  poll: 0
  register: jqinstall

- name: copy coredns and metrics-server files
  get_url:
    url: "{{ httpurl }}/{{ ansible_role_name }}/{{ item }}"
    dest: "{{ k8s_dir }}/addons/{{ item }}"
  with_items:
    - coredns.tar
    - metric-server.tar
     
- name: copy deploy  files
  copy:
    src: files/{{ item }}
    dest: "{{ k8s_dir }}/addons/{{ item }}"
  delegate_to: "{{ groups['masters'][0] }}"
  with_items:
    - components.yaml
    - coredns.yaml.sed
    - deploy.sh

- name: load coredns and metrics-server images
  shell: docker load -i {{ item }}
  args:
    chdir: "{{ k8s_dir }}/addons"
  delegate_to: "{{ groups['masters'][0] }}"
  with_items:
    - coredns.tar
    - metric-server.tar

- name: push coredns and metrics-server images
  shell: for i in $(docker images|grep k8shub|awk '{print $1":"$2}');do docker push $i;done
  when: groups['workers']|length >=2 

- name: deploy metrics-server
  shell: kubectl apply -f components.yaml
  ignore_errors: true
  args:
    chdir: "{{ k8s_dir }}/addons"

- name: get task status of jqinstall
  async_status:
    jid: "{{ jqinstall.ansible_job_id }}"
  register: result
  until: result.finished
  delay: 2
  retries: 60
  
- name: deploy coredns
  shell: bash deploy.sh -i "{{ service_cidr_prefix }}2"  -d "{{ cluster_dns_domain }}" | kubectl apply -f -
  args:
    chdir: "{{ k8s_dir }}/addons"


#- name: make images dir
#  file:
#    path: /opt/images
#    state: directory
#
#- name: untar images tar file
#  unarchive:
#    src: /opt/images.tar.gz
#    dest: /opt/images
#  run_once: true
#  delegate_to: "{{ groups['masters'][0] }}"
#
#- name: load images
#  shell: for i in $(ls /opt/images/*.tar);do docker load -i $i;done
#  run_once: true
#  delegate_to: "{{ groups['masters'][0] }}"
#
#- name: push images
#  shell: for i in $(docker images|grep k8shub|awk '{print $1":"$2}');do docker push $i;done
#  delegate_to: "{{ groups['masters'][0] }}"
